import { View, TouchableOpacity } from "react-native";
import React from "react";
import { BottomTabBarProps } from "@react-navigation/bottom-tabs";
import TabBarBackground from "./TabBarBackground";
import AnimatedTabBarIcon from "./AnimatedTabBarIcon";

const icons_map = {
  "(missions)":
    "M41.9985 36.4985H37.9985V32.4985H41.9985V36.4985ZM41.9985 30.4985H37.9985V13.4985H41.9985V30.4985Z",
  add: "M43.4065 22.7876C43.1137 22.4948 43.0449 22.0818 43.2366 21.8319L43.2788 21.7843L48.0593 17.0037C48.2336 17.3102 48.2777 17.6478 48.1767 17.9193L48.2257 17.9684L44.7206 21.4735L45.2861 22.0391L43.5336 23.7916L42.968 23.2261L43.4065 22.7876ZM42.4577 19.2106L43.0233 19.7762L46.5284 16.271L46.5788 16.3214C46.8502 16.2208 47.1871 16.2638 47.4931 16.4374L42.7125 21.218L42.6649 21.2601C42.415 21.4519 42.002 21.3831 41.7092 21.0903L41.2707 21.5288L40.7051 20.9632L42.4577 19.2106ZM43.2781 27.2125L43.2359 27.1649C43.0442 26.915 43.113 26.502 43.4058 26.2092L42.9673 25.7707L43.5329 25.2052L45.2855 26.9577L44.7199 27.5233L48.2251 31.0284L48.1746 31.0788C48.2754 31.3504 48.232 31.6876 48.0579 31.9938L43.2774 27.2132L43.2781 27.2125ZM38.5838 25.913C37.8028 25.1319 37.8028 23.8656 38.5838 23.0845C39.3649 22.3035 40.6312 22.3035 41.4122 23.0845C42.1933 23.8656 42.1933 25.1319 41.4122 25.913C40.6312 26.694 39.3649 26.694 38.5838 25.913ZM32.503 16.4374C32.8094 16.2632 33.1471 16.2191 33.4186 16.3201L33.4677 16.271L36.9728 19.7762L37.5383 19.2106L39.2909 20.9632L38.7254 21.5288L38.2869 21.0903C37.9941 21.3831 37.5811 21.4519 37.3312 21.2601L37.2835 21.218L32.503 16.4374ZM41.27 27.468L41.7085 27.9065C42.0013 27.6137 42.4143 27.5449 42.6642 27.7367L42.7118 27.7788L47.4924 32.5593C47.1859 32.7336 46.8482 32.7777 46.5767 32.6767L46.5277 32.7258L43.0226 29.2206L42.457 29.7862L40.7044 28.0336L41.27 27.468ZM35.2755 21.4735L31.7703 17.9684L31.8207 17.918C31.7201 17.6466 31.7631 17.3097 31.9367 17.0037L36.7173 21.7843L36.7594 21.8319C36.9511 22.0818 36.8823 22.4948 36.5896 22.7876L37.028 23.2261L36.4625 23.7916L34.7099 22.0391L35.2755 21.4735ZM37.2835 27.7781L37.2842 27.7788L37.3319 27.7367C37.5818 27.5449 37.9947 27.6137 38.2876 27.9065L38.7261 27.468L39.2916 28.0336L37.539 29.7862L36.9735 29.2206L33.4683 32.7258L33.4179 32.6754C33.1463 32.7761 32.8092 32.7327 32.503 32.5587L37.2835 27.7781ZM31.9374 31.9931C31.7632 31.6867 31.7191 31.3489 31.82 31.0775L31.771 31.0284L35.2762 27.5233L34.7106 26.9577L36.4632 25.2052L37.0287 25.7707L36.5902 26.2092C36.9026 26.5216 36.9606 26.9713 36.7187 27.2132L31.9374 31.9931Z",
  settings:
    "M40.9985 17.5708C41.5549 17.6504 42.09 17.7951 42.5962 17.9976L43.6323 16.2046L45.3647 17.2046L44.3276 18.9995C44.7619 19.3418 45.1542 19.7343 45.4966 20.1685L47.2925 19.1323L48.2925 20.8647L46.4985 21.8999C46.7012 22.4064 46.8466 22.9417 46.9263 23.4985H48.9985V25.4985H46.9263C46.8466 26.0551 46.701 26.5899 46.4985 27.0962L48.2925 28.1323L47.2925 29.8647L45.4966 28.8276C45.1542 29.2619 44.7619 29.6542 44.3276 29.9966L45.3647 31.7925L43.6323 32.7925L42.5962 30.9976C42.0899 31.2001 41.5551 31.3456 40.9985 31.4253V33.4985H38.9985V31.4253C38.4416 31.3456 37.9064 31.2003 37.3999 30.9976L36.3647 32.7925L34.6323 31.7925L35.6684 29.9966C35.2343 29.6542 34.8418 29.2619 34.4995 28.8276L32.7046 29.8647L31.7046 28.1323L33.4975 27.0962C33.2951 26.59 33.1504 26.055 33.0708 25.4985H30.9985V23.4985H33.0708C33.1504 22.9418 33.2949 22.4063 33.4975 21.8999L31.7046 20.8647L32.7046 19.1323L34.4995 20.1685C34.8418 19.7343 35.2343 19.3418 35.6684 18.9995L34.6323 17.2046L36.3647 16.2046L37.3999 17.9976C37.9063 17.795 38.4418 17.6504 38.9985 17.5708V15.4985H40.9985V17.5708ZM39.1401 18.561C38.6625 18.6294 38.2037 18.7531 37.771 18.9263L36.9673 19.2476L36.5347 18.4995L36.9673 19.2485L36.2876 19.7847C35.9151 20.0784 35.5783 20.4151 35.2847 20.7876L34.7485 21.4673L33.9995 21.0347L33.9975 21.0337L34.7475 21.4673L34.4263 22.271C34.2531 22.7037 34.1294 23.1625 34.061 23.6401L33.938 24.4985L34.061 25.3569C34.1293 25.8339 34.2531 26.2922 34.4263 26.7251L34.7475 27.5288L33.9975 27.9624L33.0698 28.4976L33.9995 27.9614L34.7485 27.5288L35.2847 28.2085C35.5782 28.5809 35.915 28.9176 36.2876 29.2114L36.9673 29.7466L36.9663 29.7476L37.771 30.0688C38.2048 30.2425 38.6633 30.3668 39.1401 30.4351L39.9985 30.5581L40.8569 30.4351C41.333 30.3669 41.7911 30.2425 42.2251 30.0688L43.0288 29.7476L43.7085 29.2114C44.081 28.9177 44.4177 28.581 44.7114 28.2085L45.2475 27.5288L45.9966 27.9614L46.9263 28.4976L45.9985 27.9624L45.2485 27.5288L45.5698 26.7251C45.7434 26.2911 45.8679 25.8329 45.936 25.3569L46.0591 24.4985L45.936 23.6401C45.8678 23.1635 45.7434 22.7048 45.5698 22.271L45.2485 21.4673L45.9985 21.0337L45.9966 21.0347L45.2466 21.4673L44.7114 20.7876C44.4175 20.415 44.0808 20.0782 43.7085 19.7847L43.0288 19.2485L43.4614 18.4995L43.0288 19.2476L42.2251 18.9263C41.7921 18.7531 41.3339 18.6293 40.8569 18.561L39.9985 18.438L39.1401 18.561ZM39.9985 19.4985C42.7599 19.4985 44.9985 21.7371 44.9985 24.4985C44.9985 27.26 42.7599 29.4985 39.9985 29.4985C37.2371 29.4985 34.9985 27.26 34.9985 24.4985C34.9985 21.7371 37.2371 19.4985 39.9985 19.4985ZM39.9985 19.9985C37.5132 19.9985 35.4985 22.0133 35.4985 24.4985C35.4985 26.9838 37.5132 28.9985 39.9985 28.9985C42.4838 28.9985 44.4985 26.9838 44.4985 24.4985C44.4985 22.0133 42.4838 19.9985 39.9985 19.9985Z",
};

const renderIcon = (iconName: keyof typeof icons_map, isFocused: boolean) => {
  const IconPath = icons_map[iconName];
  if (!IconPath) return null;
  return <AnimatedTabBarIcon IconPath={IconPath} isFocused={isFocused} />;
};

const TabBar = ({ state, descriptors, navigation }: BottomTabBarProps) => {
  return (
    <View className="flex-row absolute bottom-0 right-0 left-0 justify-center items-end mb-10">
      <View className="absolute justify-center items-center">
        <TabBarBackground />
      </View>
      {state.routes.map((route, index) => {
        const { options } = descriptors[route.key];
        const label =
          options.tabBarLabel !== undefined &&
          typeof options.tabBarLabel === "string"
            ? options.tabBarLabel
            : options.title !== undefined && typeof options.title === "string"
              ? options.title
              : route.name;

        const isFocused = state.index === index;

        const onPress = () => {
          const event = navigation.emit({
            type: "tabPress",
            target: route.key,
            canPreventDefault: true,
          });

          if (!isFocused && !event.defaultPrevented) {
            navigation.navigate(route.name, route.params);
          }
        };
        return (
          <TouchableOpacity
            key={`tab-${route.key}`}
            accessibilityRole="button"
            accessibilityState={isFocused ? { selected: true } : {}}
            accessibilityLabel={options.tabBarAccessibilityLabel}
            testID={options.tabBarButtonTestID}
            onPress={onPress}
            className="flex w-[110] justify-center items-center -mb-[1.6]"
          >
            {renderIcon(route.name as keyof typeof icons_map, isFocused)}
          </TouchableOpacity>
        );
      })}
    </View>
  );
};

export default TabBar;
